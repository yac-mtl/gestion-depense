/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fenetre;


import static fenetre.Authentification.jPasswordFieldMotDePasse;
import static fenetre.Authentification.jTextFieldNomUtilisateur;
import static fenetre.Preference.jTextFieldChoixBalance;
import java.awt.Color;
import static java.awt.Color.red;
import java.awt.List;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import static java.lang.System.in;
import java.nio.file.Files;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.management.StringValueExp;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.table.DefaultTableModel;
import model.Depense;
import model.Utilisateur;
import util.Utilitaire;

/**
 *
 * @author yacine-pc
 */
public class DepenseAffichage extends javax.swing.JFrame {
   
    DefaultTableModel model;
    DefaultTableModel mode;
//    DefaultTableModel model1;
    DepenseAffichage d ;
    
   

    @Override
    public void setDefaultCloseOperation(int operation) {
        super.setDefaultCloseOperation(0); //To change body of generated methods, choose Tools | Templates.
    }
    
   
    /**utili uti = new ul()
     * Creates new form Depense
     */
    public DepenseAffichage() {
        
        
        initComponents();
       
        getContentPane().setBackground(Color.orange);
        calendar();
         model = (DefaultTableModel) jTableDepot.getModel();
         mode = (DefaultTableModel) jTableDepense.getModel();
         run();
        
         jTextFieldNom.setVisible(true);
         jTextFieldPrenom.setVisible(true);
         jTextFieldEtatConnexion.setVisible(true);
         jLabelNom.setVisible(true);
         jLabelPrenom.setVisible(true);
       
         AfficherUtilisateur();
          afficherListeDepot();
          afficherListeDepense();
          
           setButtonDepense();

        
    }
      public void calendar(){
        Calendar cal = new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int day = cal.get(Calendar.DAY_OF_MONTH);
        int year = cal.get(Calendar.YEAR);
        int hour = cal.get(Calendar.HOUR_OF_DAY);
        int minute = cal.get(Calendar.MINUTE);
        jTextFieldDate.setText(+day+"-"+(month+1)+"-"+year+",\n");
        
      
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextFieldDepot = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jDateChooserBudget = new com.toedter.calendar.JDateChooser();
        jButton6 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNomDepense = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldMontantDepense = new javax.swing.JTextField();
        jButtonAjoutDepense = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jDateChooserDepense = new com.toedter.calendar.JDateChooser();
        jButton5 = new javax.swing.JButton();
        jLabelInformation = new javax.swing.JLabel();
        jLabelBudget = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDepense = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldBudget = new javax.swing.JTextField();
        jTextFieldDepenseTotal = new javax.swing.JTextField();
        jTextFieldBalance = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDepot = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTextFieldEtatConnexion = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jButtonDeconnecter = new javax.swing.JButton();
        jTextFieldPrenom = new javax.swing.JTextField();
        jTextFieldNom = new javax.swing.JTextField();
        jLabelNom = new javax.swing.JLabel();
        jLabelPrenom = new javax.swing.JLabel();
        jTextFieldDate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldLimitteBalance = new javax.swing.JTextField();
        jButtonPreference = new javax.swing.JButton();
        jButtonRenitialiser = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 0));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Les depots", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 12), new java.awt.Color(204, 153, 0))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jTextFieldDepot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDepotActionPerformed(evt);
            }
        });
        jTextFieldDepot.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDepotKeyTyped(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images (1).png"))); // NOI18N
        jButton1.setText("Ajouter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/kisspng-computer-icons-icon-remove-pictures-5ab08c966c9513.1221429215215197664448.png"))); // NOI18N
        jButton2.setText("Supprimer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel7.setText("Entrez le montant de votre budget:");

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bal.png"))); // NOI18N
        jButton6.setText("Supprimer tout");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldDepot, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel7)
                                .addComponent(jDateChooserBudget, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldDepot, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jDateChooserBudget, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6)
                .addGap(6, 6, 6))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Les depenses", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 12), new java.awt.Color(204, 153, 0))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel1.setText("le nom de la depense:");

        jTextFieldNomDepense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomDepenseActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel2.setText("le moentant :");

        jTextFieldMontantDepense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMontantDepenseActionPerformed(evt);
            }
        });
        jTextFieldMontantDepense.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldMontantDepenseKeyTyped(evt);
            }
        });

        jButtonAjoutDepense.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonAjoutDepense.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images (1).png"))); // NOI18N
        jButtonAjoutDepense.setText("Ajouter");
        jButtonAjoutDepense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjoutDepenseActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bal.png"))); // NOI18N
        jButton4.setText("Supprimer tout");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jDateChooserDepense.setForeground(new java.awt.Color(255, 51, 0));

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/kisspng-computer-icons-icon-remove-pictures-5ab08c966c9513.1221429215215197664448.png"))); // NOI18N
        jButton5.setText("Supprimer");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabelInformation.setForeground(new java.awt.Color(255, 51, 0));
        jLabelInformation.setText("Vous devez mettre des font pour pouvoir ajouter des depense");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonAjoutDepense, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldMontantDepense, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jDateChooserDepense, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)
                                .addComponent(jTextFieldNomDepense)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(17, 17, 17))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jButton4))
                    .addComponent(jLabelInformation))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldNomDepense, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldMontantDepense, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDateChooserDepense, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAjoutDepense, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabelBudget.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabelBudget.setForeground(new java.awt.Color(51, 51, 255));
        jLabelBudget.setText("Budget");

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Depenses");

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 204));
        jLabel5.setText("Balance");

        jTableDepense.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom", "Montant-Depense", "Date"
            }
        ));
        jScrollPane2.setViewportView(jTableDepense);

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 0, 51));
        jLabel6.setText("Calculateur des depenses");

        jTextFieldBudget.setEditable(false);

        jTextFieldDepenseTotal.setEditable(false);

        jTextFieldBalance.setEditable(false);
        jTextFieldBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBalanceActionPerformed(evt);
            }
        });

        jTableDepot.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Depot", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableDepot);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Starkode.Business.Expense.png"))); // NOI18N
        jLabel11.setText("jLabel11");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informations Personnels", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 12), new java.awt.Color(204, 153, 0))); // NOI18N

        jTextFieldEtatConnexion.setEditable(false);
        jTextFieldEtatConnexion.setForeground(new java.awt.Color(0, 153, 0));

        jButton10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        jButton10.setText("Sauvegarder");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButtonDeconnecter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonDeconnecter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deconnexion.png"))); // NOI18N
        jButtonDeconnecter.setText("Deconnecter");
        jButtonDeconnecter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeconnecterActionPerformed(evt);
            }
        });
        jButtonDeconnecter.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jButtonDeconnecterPropertyChange(evt);
            }
        });

        jTextFieldPrenom.setEditable(false);

        jTextFieldNom.setEditable(false);

        jLabelNom.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabelNom.setText("Nom  :");

        jLabelPrenom.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabelPrenom.setText("Prenom  :");

        jTextFieldDate.setEditable(false);
        jTextFieldDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDateActionPerformed(evt);
            }
        });

        jLabel8.setText("Limitte Balance :");

        jTextFieldLimitteBalance.setEditable(false);
        jTextFieldLimitteBalance.setForeground(new java.awt.Color(0, 0, 153));
        jTextFieldLimitteBalance.setText("0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabelNom, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldEtatConnexion, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldDate)
                            .addComponent(jTextFieldLimitteBalance, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButtonDeconnecter, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldLimitteBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldEtatConnexion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNom))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPrenom))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDeconnecter, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButtonPreference.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonPreference.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/preference.png"))); // NOI18N
        jButtonPreference.setText("Preference");
        jButtonPreference.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPreferenceActionPerformed(evt);
            }
        });

        jButtonRenitialiser.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonRenitialiser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/reset.png"))); // NOI18N
        jButtonRenitialiser.setText("Renitialiser");
        jButtonRenitialiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRenitialiserActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh green.png"))); // NOI18N
        jButton8.setText("Actualiser");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButtonPreference)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonRenitialiser, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(134, 134, 134))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jTextFieldDepenseTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4))
                                    .addGap(169, 169, 169)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextFieldBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(8, 8, 8))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
                                .addComponent(jScrollPane1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(193, 193, 193)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(75, 75, 75)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldBudget, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabelBudget, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonPreference)
                            .addComponent(jButtonRenitialiser))))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabelBudget))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldDepenseTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldBudget, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(jButton8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(19, 19, 19))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//            DefaultTableModel model = (DefaultTableModel)jTableDepense.getModel();
           
        try { 
            
            
             String file = jTextFieldNomUtilisateur.getText()+"ListeDepot"+".txt";
            FileWriter fw = new FileWriter(file,true);
     
     
    double somme = Double.parseDouble(jTextFieldDepot.getText());
    double budget = Double.parseDouble(jTextFieldBudget.getText());
     SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
     String date = dateFormat.format(jDateChooserBudget.getDate());
    
    budget = budget + somme;
    jTextFieldBudget.setText(String.valueOf(budget));
    jTextFieldDepot.setText("");
    jButtonAjoutDepense.setVisible(true);
    jLabelInformation.setVisible(false);
    model.insertRow(jTableDepot.getRowCount(), new Object[]{somme,date});
  
    try {
   
     fw.write(somme+" "+date);
   
    fw.write("\r\n");
  
    fw.close();
   
             

fw.close();
calculBalance();
} catch (IOException ex) {
    Logger.getLogger(DepenseAffichage.class.getName()).log(Level.SEVERE, null, ex);
}}catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "vous n'avez pas remplis touts les champs ou la saisie est incorrect,veillez reessayer SVP","erreur de saisie",JOptionPane.ERROR_MESSAGE);
        
            
        } catch (IOException ex) {
            Logger.getLogger(DepenseAffichage.class.getName()).log(Level.SEVERE, null, ex);
        }
       
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonAjoutDepenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjoutDepenseActionPerformed
try{
    
//   DefaultTableModel mode = (DefaultTableModel)jTableDepense.getModel();
   double balance = Double.parseDouble(jTextFieldBalance.getText());
   double montantDepense = Double.parseDouble(jTextFieldMontantDepense.getText());
   
  double choix ;//la limitte de la balnce suggrere par l'utilisateur ,valeur par defaut 0
  choix = Double.parseDouble(jTextFieldLimitteBalance.getText());
        //miantenant on verifie si la balance est egale a la limitte
      
          if(balance ==choix ){
                JOptionPane.showMessageDialog(null, "vous n'avez pas assez de revenue , veillez deposer de l'argent pour ajouter des depenses","erreur ",JOptionPane.ERROR_MESSAGE);
                jButtonAjoutDepense.setVisible(false);
                jLabelInformation.setVisible(true);
           }
          //on verifie si le resultat apres depnse ne soit pas inferieur a la limitte 
          else if ( (balance - montantDepense < choix)){
                JOptionPane.showMessageDialog(null, "Votre balance va etre inferieure que votre limitte de depense, veillez deposer de l'argent ou changer vos preferences","erreur ",JOptionPane.ERROR_MESSAGE);
           }
           //on verifie si le montant de depense est superieur a la balance
               else if (montantDepense>balance){
                   jButtonAjoutDepense.setVisible(false);
                   JOptionPane.showMessageDialog(null, "vous n'avez pas assez de revenue , veillez deposer de l'argent pour ajouter cette depense","erreur ",JOptionPane.ERROR_MESSAGE);
                   
           }
           else{  
               
                  //on sauvegrade les donnes sur le fichier de l'utilisateur
                   String file = jTextFieldNomUtilisateur.getText()+"ListeDepense"+".txt";
                   FileWriter fw = new FileWriter(file,true);
     
     
    String nomDepense = jTextFieldNomDepense.getText();
    
     SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
     String dateDepense = dateFormat.format(jDateChooserDepense.getDate());
    
     Double depenseTotal = Double.parseDouble(jTextFieldDepenseTotal.getText());
     depenseTotal = depenseTotal + montantDepense;
    jTextFieldDepenseTotal.setText(String.valueOf(depenseTotal));
    jTextFieldDepot.setText("");
    
    balance = balance - montantDepense;
    jTextFieldBalance.setText(String.valueOf(balance));
    jTextFieldMontantDepense.setText("");
    jTextFieldNomDepense.setText("");
   
    
    mode.insertRow(jTableDepense.getRowCount(), new Object[]{nomDepense,montantDepense,dateDepense});
    
   
    try {
   
     fw.write(nomDepense+" "+montantDepense+" "+dateDepense);
    fw.write("\r\n");
    fw.close();
   
//       afficherListeDepense();      


} catch (IOException ex) {
    Logger.getLogger(DepenseAffichage.class.getName()).log(Level.SEVERE, null, ex);
}
               } } catch (IOException ex) {
            Logger.getLogger(DepenseAffichage.class.getName()).log(Level.SEVERE, null, ex);
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "vous n'avez pas remplis touts les champs ou la saisie est incorrect,veillez reessayer SVP","erreur de saisie",JOptionPane.ERROR_MESSAGE);
        }
           
          

    
    

        
     
       

    }//GEN-LAST:event_jButtonAjoutDepenseActionPerformed

    private void jTextFieldBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBalanceActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
//   DefaultTableModel model = (DefaultTableModel)jTableDepense.getModel();
        if(Double.parseDouble(jTextFieldDepenseTotal.getText()) !=0){
    JOptionPane.showMessageDialog(null, "vous avez des depense,veillez supprimer les depenses avant de supprimer les depots SVP","erreur",JOptionPane.ERROR_MESSAGE);
}
else{    
        try{        
  effacerTableauDepot();
  saveLiseDepot();
  afficherListeDepot();
}catch(NumberFormatException e){
    JOptionPane.showMessageDialog(this, "erreur");
}catch(IndexOutOfBoundsException e){
    JOptionPane.showMessageDialog(this, "erreur tableau");
}
}             
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
   
        sauvegarderDonnees();
       
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButtonDeconnecterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeconnecterActionPerformed
        // deconnexion
      
           sauvegarderDonnees();
           System.exit(0);
     
      
    }//GEN-LAST:event_jButtonDeconnecterActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // supprimer une ligne du tableau depot
//       
         try{
//         DefaultTableModel model= (DefaultTableModel)jTableDepot.getModel();
           double limite = Double.parseDouble(jTextFieldLimitteBalance.getText());
          double montant = Double.parseDouble( jTableDepot.getValueAt(jTableDepot.getSelectedRow(), 0).toString()) ;
                
          double budget = Double.parseDouble(jTextFieldBudget.getText());
           double balance = Double.parseDouble(jTextFieldBalance.getText());
//            double depense = Double.parseDouble(jTextFieldDepenseTotal.getText());
            budget = budget - montant;
               if(balance ==limite ){
                JOptionPane.showMessageDialog(null, "vous n'avez pas assez de revenue , veillez deposer de l'argent pour ajouter des depenses","erreur ",JOptionPane.ERROR_MESSAGE);
                jButtonAjoutDepense.setVisible(false);
                
           }
          //on verifie si le resultat apres depnse ne soit pas inferieur a la limitte 
       else  if ( (balance - montant < limite)){
                JOptionPane.showMessageDialog(null, "Votre balance va etre inferieure que votre limitte de depense, veillez deposer de l'argent ou changer vos preferences","erreur ",JOptionPane.ERROR_MESSAGE);
           }
           //on verifie si le montant de depense est superieur a la balance
           else    if (montant>balance){
                   jButtonAjoutDepense.setVisible(false);
                   JOptionPane.showMessageDialog(null, "le montant est inferieur a votre balance , veillez deposer de l'argent pouvoir supprimer","erreur ",JOptionPane.ERROR_MESSAGE);
           } else if(jTableDepot.getRowCount()!=0){
//               JOptionPane.showMessageDialog(null, "le tableau est vide","erreur",JOptionPane.ERROR_MESSAGE);
          
              
            model.removeRow(jTableDepot.getSelectedRow());
            jTextFieldBudget.setText(String.valueOf(budget));
            balance = balance - montant;
            jTextFieldBalance.setText(String.valueOf(balance));
                   supprimerContenueFichier();
             saveLiseDepot();
//            Utilisateur u = new Utilisateur();
//            String path = jTextFieldNomUtilisateur.getText()+".txt";
//            String msg ="vos donnees sont bien mise a jours";
//            Utilitaire.saveUser(u, path, msg);
           } }catch(NumberFormatException b){
                    JOptionPane.showMessageDialog(null, "veillez selectionner une ligne svp","erreur ",JOptionPane.ERROR_MESSAGE);
               }catch(ArrayIndexOutOfBoundsException e){
                   JOptionPane.showMessageDialog(null, "le tableau est vide","erreur ",JOptionPane.ERROR_MESSAGE);
               }
    
        
      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       try{
        // effacer une ligne du tableua depense
        
//        DefaultTableModel mode= (DefaultTableModel)jTableDepense.getModel();
       
        
          double montant = Double.parseDouble( jTableDepense.getValueAt(jTableDepense.getSelectedRow(), 1).toString()) ;
          double budget = Double.parseDouble(jTextFieldBudget.getText());
           double balance = Double.parseDouble(jTextFieldBalance.getText());
            double depense = Double.parseDouble(jTextFieldDepenseTotal.getText());
            if((depense - montant) <= 0 ){
               depense = montant;
               jTextFieldDepenseTotal.setText(String.valueOf(depense));
          }
            balance = balance + montant;
            jTextFieldBalance.setText(String.valueOf(balance));
            depense = depense - montant;
            jTextFieldDepenseTotal.setText(String.valueOf(depense));
            mode.removeRow(jTableDepense.getSelectedRow());
          
          saveListeDepense();
//            saveListeDepense();

//           afficherListeDepense();
         
        
          if(jTableDepense.getRowCount()==0 ){
               JOptionPane.showMessageDialog(null, "le tableau est vide","erreur",JOptionPane.ERROR_MESSAGE);
          }else if(jTableDepense.getSelectedRow()>1){
               JOptionPane.showMessageDialog(null, "veillez selectionner une seule ligne SVP","erreur",JOptionPane.ERROR_MESSAGE);
          
      }}catch(NumberFormatException b){
                    JOptionPane.showMessageDialog(null, "veillez selectionner une ligne svp","erreur ",JOptionPane.ERROR_MESSAGE);
               }catch(ArrayIndexOutOfBoundsException e){
                   JOptionPane.showMessageDialog(null, "le tableau est vide","erreur ",JOptionPane.ERROR_MESSAGE);
               }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
   
       // affacer tout les donnees du tableau depense
       try{
//   DefaultTableModel mode = (DefaultTableModel)jTableDepense.getModel();
  double budget =    Double.parseDouble(jTextFieldBudget.getText());
  double depense = Double.parseDouble(jTextFieldDepenseTotal.getText());
  budget = budget + depense;
  jTextFieldNom.setText(String.valueOf(budget));
  jTextFieldDepenseTotal.setText("0.0");
   effacerTableDepense();
   
   saveListeDepense();
   afficherListeDepense();
   }catch(NumberFormatException e){
    JOptionPane.showMessageDialog(this, "erreur");
}catch(IndexOutOfBoundsException e){
    JOptionPane.showMessageDialog(this, "erreur tableau");
}
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButtonPreferenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPreferenceActionPerformed
        // fermer cette fenetre et ouvrir la fenetre des preference
       
        Preference p = new Preference();
        p.setVisible(true);
    }//GEN-LAST:event_jButtonPreferenceActionPerformed

    private void jTextFieldDepotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDepotActionPerformed
    
    }//GEN-LAST:event_jTextFieldDepotActionPerformed

    private void jTextFieldDepotKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDepotKeyTyped
        // TODO add your handling code here:
//             char n = evt.getKeyChar();
//      if (!(Character.isDigit(n)) || (n==KeyEvent.VK_BACK_SPACE)|| (n==KeyEvent.VK_DELETE)){
//          evt.consume();
//      }
    }//GEN-LAST:event_jTextFieldDepotKeyTyped

    private void jTextFieldMontantDepenseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMontantDepenseKeyTyped
//        // TODO add your handling code here:
//             char n = evt.getKeyChar();
//      if (!(Character.isDigit(n)) || (n==KeyEvent.VK_BACK_SPACE)|| (n==KeyEvent.VK_DELETE)){
//          evt.consume();
//      }
    }//GEN-LAST:event_jTextFieldMontantDepenseKeyTyped

    private void jButtonRenitialiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRenitialiserActionPerformed
        // TODO add your handling code here:
        jButtonAjoutDepense.setVisible(true);
        jTextFieldDepenseTotal.setText("0.0");
        jTextFieldBudget.setText("0.0");
        jTextFieldBalance.setText("0.0");
        String nomUtilisateur = jTextFieldNomUtilisateur.getText();
        String fichierPersonnel = nomUtilisateur+".txt";
        String msg = "votre application est bien renitialisee";
        
        Utilisateur u = new Utilisateur();
        Utilitaire.saveUserPersonnel(u, fichierPersonnel, msg);
         effacerTableauDepot();
         effacerTableDepense();
         saveLiseDepot();
         saveListeDepense();
         lireFichierDepot();
        lireFichierDepense();
         AfficherUtilisateur();
         afficherListeDepense();
         afficherListeDepot();
         this.dispose();
         Authentification a = new Authentification();
         a.setVisible(true);
        
    }//GEN-LAST:event_jButtonRenitialiserActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        effacerTableauDepot();
        effacerTableDepense();
        lireFichierDepot();
        lireFichierDepense();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTextFieldMontantDepenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMontantDepenseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMontantDepenseActionPerformed

    private void jTextFieldNomDepenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomDepenseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomDepenseActionPerformed

    private void jButtonDeconnecterPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jButtonDeconnecterPropertyChange
        // TODO add your handling code here:
     
    }//GEN-LAST:event_jButtonDeconnecterPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    public static javax.swing.JButton jButtonAjoutDepense;
    private javax.swing.JButton jButtonDeconnecter;
    private javax.swing.JButton jButtonPreference;
    private javax.swing.JButton jButtonRenitialiser;
    private com.toedter.calendar.JDateChooser jDateChooserBudget;
    private com.toedter.calendar.JDateChooser jDateChooserDepense;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelBudget;
    public static javax.swing.JLabel jLabelInformation;
    private javax.swing.JLabel jLabelNom;
    private javax.swing.JLabel jLabelPrenom;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableDepense;
    private javax.swing.JTable jTableDepot;
    public static javax.swing.JTextField jTextFieldBalance;
    private javax.swing.JTextField jTextFieldBudget;
    private javax.swing.JTextField jTextFieldDate;
    private javax.swing.JTextField jTextFieldDepenseTotal;
    private javax.swing.JTextField jTextFieldDepot;
    public static javax.swing.JTextField jTextFieldEtatConnexion;
    public static javax.swing.JTextField jTextFieldLimitteBalance;
    private javax.swing.JTextField jTextFieldMontantDepense;
    public static javax.swing.JTextField jTextFieldNom;
    private javax.swing.JTextField jTextFieldNomDepense;
    public static javax.swing.JTextField jTextFieldPrenom;
    // End of variables declaration//GEN-END:variables

    private void AfficherUtilisateur() {
            String nomUtilisateur = jTextFieldNomUtilisateur.getText();
            String motDePasse = String.valueOf(jPasswordFieldMotDePasse.getPassword());
            String nom = jTextFieldNom.getText();
            String prenom = jTextFieldPrenom.getText();
            String dateEnregistrement = jTextFieldDate.getText();
       Utilisateur a = null;
    String  fichier = nomUtilisateur;
    String txt = ".txt";
            String file = nomUtilisateur+txt;
           
            
            lireFichierPersonnel(file);
             
} 
    
    public void afficherListeDepot(){
         try {
             
//            String file = jTextFieldNomUtilisateur.getText()+"ListeDepot"+".txt";
            File file = new File(jTextFieldNomUtilisateur.getText()+"ListeDepot"+".txt");
            
            if(file.exists()){
           
            FileReader fr = new FileReader(file);
             BufferedReader br = new BufferedReader(fr);
            DefaultTableModel model= (DefaultTableModel)jTableDepot.getModel();
            Object[] lines = br.lines().toArray();
            for (int i=0; i< lines.length;i++){
                String []row = lines[i].toString().split(" ");
              
                model.addRow(row);
            }
            }else{
                AfficherUtilisateur();
            }} catch (FileNotFoundException ex) {
            Logger.getLogger(DepenseAffichage.class.getName()).log(Level.SEVERE, null, ex);
        }
    } 
public void run(){
   jLabelNom.setVisible(false);
   jLabelPrenom.setVisible(false);
   jTextFieldNom.setVisible(false);
   jTextFieldPrenom.setVisible(false);
   jTextFieldEtatConnexion.setVisible(false);
}
public void connexion(String nom,String prenom){
   jLabelNom.setVisible(true);
   jLabelPrenom.setVisible(true);
   jTextFieldNom.setVisible(true);
   jTextFieldPrenom.setVisible(true);
   jTextFieldEtatConnexion.setVisible(true);
   jTextFieldNom.setText(nom);
   jTextFieldPrenom.setText(prenom);
   
}
public void donne(){
      String nomUtilisateur = jTextFieldNomUtilisateur.getText();
            String motDePasse = String.valueOf(jPasswordFieldMotDePasse.getPassword());
            String nom = jTextFieldNom.getText();
            String prenom = jTextFieldPrenom.getText();
            String dateEnregistrement = jTextFieldDate.getText();
            double budget = Double.parseDouble(jTextFieldBudget.getText());
            double balance = Double.parseDouble(jTextFieldBalance.getText());
}

    private void lireFichierPersonnel(String file) {
        ;
           FileReader fr = null;
        try {
            fr = new FileReader(file);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(DepenseAffichage.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedReader br = new BufferedReader(fr);
               boolean flag = true;
            String line;
        try {
            //line=br.readLine();
            //fair le split pour pouvoir verifier
            while((line=br.readLine())!=null && flag){
                
                
            String [] split = line.split(",");
            String line0 = split[0];
            String line1 = split[1];
            String line2 = split[2];
            String line3 = split[3];
            String line4 = split[4];
            String line5 = split[5];
            String line6 = split[6];
            String line7 = split[7];
            String line8 = split[8];
            String line9 = split[9];
            String line10= split[10];
            String line11 =split[11];
            String line12 =split[12];
            String line13 =split[13];
            String line14 =split[14];
            String line15 =split[15];
           
            String nom = line1;
            String prenom = line3;
            String nomUtilisateur= line5;
            String motPasse = line7;
            double budget = Double.parseDouble(line9);
            double balance = Double.parseDouble(line11);
            double totalDepense = Double.parseDouble(line13);
            String dateInscrription = line15;
         
           Utilisateur u = new Utilisateur(nomUtilisateur, motPasse, nom, prenom, dateInscrription, budget, balance,totalDepense);
           jTextFieldBudget.setText(String.valueOf(budget));
           double b = Double.parseDouble(jTextFieldBudget.getText());
           jTextFieldBalance.setText(String.valueOf(balance));
           double bal = Double.parseDouble(jTextFieldBalance.getText());
           totalDepense = b - bal;
           jTextFieldDepenseTotal.setText(String.valueOf(totalDepense));
           
                
            }   } catch (IOException ex) {
            Logger.getLogger(DepenseAffichage.class.getName()).log(Level.SEVERE, null, ex);
        }
}

    private void afficherListeDepense() {
           try {
                File file = new File(jTextFieldNomUtilisateur.getText()+"ListeDepense"+".txt");
           
            if(file.exists()){
                FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            
            DefaultTableModel model= (DefaultTableModel)jTableDepense.getModel();
            Object[] lines = br.lines().toArray();
            for (int i=0; i< lines.length;i++){
                String []row = lines[i].toString().split(" ");
              
                model.addRow(row);
            }
            }else{
               AfficherUtilisateur();
           }} catch (FileNotFoundException ex) {
            Logger.getLogger(DepenseAffichage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void calculBalance(){
            double budget = Double.parseDouble(jTextFieldBudget.getText());
            double balance = Double.parseDouble(jTextFieldBalance.getText());
//            double depot = Double.parseDouble(jTextFieldDepot.getText());
//            double depense = Double.parseDouble(jTextFieldMontantDepense.getText());
            double depensetotal = Double.parseDouble(jTextFieldDepenseTotal.getText());
            
            balance = budget - depensetotal;
           
            jTextFieldBalance.setText(String.valueOf(balance));
            
    }

    private void affichage() {
  
    }

    private void saveLiseDepot() {
//            DefaultTableModel model = (DefaultTableModel)jTableDepot.getModel();
ArrayList<String> list = new ArrayList<>();
            String file = jTextFieldNomUtilisateur.getText()+"ListeDepot"+".txt";
              File filepath = new File(file);
              try {
              FileWriter fw = new FileWriter(filepath);
              BufferedWriter bw = new BufferedWriter(fw);
              for (int i=0 ; i< jTableDepot.getRowCount();i++){
                  for (int j = 0;j<jTableDepot.getColumnCount();i++){
                      list.add(jTableDepot.getModel().getValueAt(i, j).toString());
                      bw.write(jTableDepot.getModel().getValueAt(i, j).toString()+"");
                  }
//                  bw.newLine();
              }
              bw.close();
              fw.close();
              JOptionPane.showMessageDialog(null, "data transfere avec succes");
          } catch (IOException ex) {
              Logger.getLogger(DepenseAffichage.class.getName()).log(Level.SEVERE, null, ex);
          }catch (ArrayIndexOutOfBoundsException f){
              f.getStackTrace();
          }
    }
    private void saveListeDepense() {
//            DefaultTableModel mode = (DefaultTableModel)jTableDepense.getModel();
            ArrayList<String> list = new ArrayList<>();
            String  file = jTextFieldNomUtilisateur.getText()+"ListeDepense"+".txt";
            File filepath = new File(file);
             try {
              FileWriter fw = new FileWriter(filepath);
              BufferedWriter bw = new BufferedWriter(fw);
              for (int i=0 ; i< jTableDepense.getRowCount();i++){
                  for (int j = 0;j<jTableDepense.getColumnCount();i++){
                      list.add(jTableDepense.getModel().getValueAt(i, j).toString());
                      bw.write(jTableDepense.getModel().getValueAt(i, j).toString()+"");
                  }
//                  bw.newLine();
              }
              bw.close();
              fw.close();
              JOptionPane.showMessageDialog(null, "data transfere avec succes");
          } catch (IOException ex) {
              Logger.getLogger(DepenseAffichage.class.getName()).log(Level.SEVERE, null, ex);
          }catch (ArrayIndexOutOfBoundsException f){
              f.getStackTrace();
          }
    }
    public void effacerTableauDepot(){
           if(jTableDepot.getRowCount()==0){
         JOptionPane.showMessageDialog(null, "le tableau est vide","erreur",JOptionPane.ERROR_MESSAGE);
     }else{
        jTableDepot.setModel(new DefaultTableModel(null,new String []{"Depot","Date"}));
        
     }
    }
    public void effacerTableDepense(){
                if(jTableDepense.getRowCount()==0){
         JOptionPane.showMessageDialog(null, "le tableau est vide","erreur",JOptionPane.ERROR_MESSAGE);
     }else{
        jTableDepense.setModel(new DefaultTableModel(null,new String []{"Nom","Montant","Date"}));
        
     }
    }
  public void sauvegarderDonnees(){
           try {
          
            String file = jTextFieldNomUtilisateur.getText()+".txt";
            FileReader fr = new FileReader(file);
            String nomUtilisateur = jTextFieldNomUtilisateur.getText();
            String motDePasse = String.valueOf(jPasswordFieldMotDePasse.getPassword());
            String nom = jTextFieldNom.getText();
            String prenom = jTextFieldPrenom.getText();
            String dateEnregistrement = jTextFieldDate.getText();
            double budget = Double.parseDouble(jTextFieldBudget.getText());
            double balance = Double.parseDouble(jTextFieldBalance.getText());
            double totalDepense = Double.parseDouble(jTextFieldDepenseTotal.getText());
            
            Utilisateur u = new Utilisateur(nomUtilisateur, motDePasse, nom, prenom, dateEnregistrement, budget, balance,totalDepense);
            String msg = "vos donnes sont bien enregistres";
            Utilitaire.saveUserPersonnel(u, file, msg);
           
        } catch (FileNotFoundException ex) {
            Logger.getLogger(DepenseAffichage.class.getName()).log(Level.SEVERE, null, ex);
        }
  }
public void supprimerContenueFichier(){
        try {
         String   file = jTextFieldNomUtilisateur.getText()+"ListeDepense"+".txt";
            FileWriter fw = new FileWriter(file);
            PrintWriter pw = new PrintWriter(fw);
        
                pw.print("");
            pw.close();
        } catch (IOException ex) {
            Logger.getLogger(DepenseAffichage.class.getName()).log(Level.SEVERE, null, ex);
        }
     
}public void lireFichierDepense(){
               try {
            String file = jTextFieldNomUtilisateur.getText()+"ListeDepot"+".txt";
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            DefaultTableModel model= (DefaultTableModel)jTableDepot.getModel();
            Object[] lines = br.lines().toArray();
            for (int i=0; i< lines.length;i++){
                String []row = lines[i].toString().split(" ");
                model.addRow(row);
                br.close();
                fr.close();
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(DepenseAffichage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(DepenseAffichage.class.getName()).log(Level.SEVERE, null, ex);
        }
}
public void lireFichierDepot(){
               try {
            String file = jTextFieldNomUtilisateur.getText()+"ListeDepense"+".txt";
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            DefaultTableModel model= (DefaultTableModel)jTableDepense.getModel();
            Object[] lines = br.lines().toArray();
            for (int i=0; i< lines.length;i++){
                String []row = lines[i].toString().split(" ");
                model.addRow(row);
                br.close();
                fr.close();
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(DepenseAffichage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(DepenseAffichage.class.getName()).log(Level.SEVERE, null, ex);
        }
}   
public void setButtonDepense(){
    if(Double.parseDouble(jTextFieldBalance.getText())==Double.parseDouble(jTextFieldLimitteBalance.getText())){
        jButtonAjoutDepense.setVisible(false);
        jLabelInformation.setVisible(true);
    }else{
                jButtonAjoutDepense.setVisible(true);
                jLabelInformation.setVisible(false);
                }
             
    }
} 

